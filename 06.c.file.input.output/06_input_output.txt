task 1
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
int main(int argc, char* argv[])
{
    int fd1;
    int fd2;
    char c;
    if (argc != 3)
    {
        errx(1, "Wrong number of arguments");
    }
    fd1 = open(argv[1], O_RDONLY);
    if (fd1 == -1)
    {
        errx(2, "Couldn't open file for reading\n");
    }
    fd2 = open(argv[2], O_WRONLY | O_CREAT, S_IRUSR);
    if (fd2 == -1)
    {
        errx(2, "Couldn't open file for writing\n");
    }
    while ( read(fd1, &c, 1) )
    {
        write(fd2, &c, 1);
    }
    close(fd1);
    close(fd2);
    exit(0);
}

task 2
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
int main(int argc, char* argv[])
{
    int fd;
    char c;
    if (argc != 2)
    {
        errx(1, "Wrong number of arguments");
    }
    if ((fd = open(argv[1], O_RDONLY)) == -1)
    {
        errx(2, "Couldn't open file for reading\n");
    }
    int rows = 0;
    while (rows < 10 && read(fd, &c, 1))
    {
        if ( c == '\n' ){
            rows++;
        }
        write(1, &c, 1);
    }
    close(fd);
    exit(0);
}

task 3
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
#include <stdio.h>
int main(int argc, char* argv[])
{
    int fd;
    char c;
    if (argc != 2)
    {
        errx(1, "Wrong number of arguments");
    }
    if ((fd = open(argv[1], O_RDONLY)) == -1)
    {
        errx(2, "Couldn't open file for reading\n");
    }
    int rows = 0, words = 0, bytes = 0;
    while (read(fd, &c, 1))
    {
        bytes++;
        if ( c == '\n' ){
            rows++;
            words++;
        }
        if (c == ' '){
            words++;
        }
    }
    printf("File %s has:\n%d number of lines.\n%d number of words.\n%d number of chars.\n", argv[1], rows, words, bytes);
    close(fd);
    exit(0);
}

task 4
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>
#include <err.h>
#include <stdio.h>
int main(int argc, char* argv[])
{
    int fd1, fd2, fd3;
    if (argc != 3){
        errx(1, "Wrong number of arguments");
    }
    if ((fd1 = open(argv[1], O_RDWR)) == -1) {
        errx(2, "Couldn't open %s\n", argv[1]);
    }
    if ((fd2 = open(argv[2], O_RDWR)) == -1){
        errx(2, "Couldn't open %s\n", argv[2]);
    }
    fd3 = open("temp_file", O_CREAT | O_RDWR | O_TRUNC, S_IRUSR | S_IWUSR);
    if (fd3 == -1){
        errx(2, "Couldn't open %s\n", "temp_file");
    }
    char c[4096];
    ssize_t readSize;
    while ((readSize = read(fd1, &c, sizeof(c))) > 0){
        if (write(fd3, &c, readSize) != readSize){
            err(1, "Error while writing");
        }
    }
    lseek(fd1, 0, SEEK_SET);
    while((readSize = read(fd2, &c, sizeof(c))) > 0){
        if (write(fd1, &c, readSize) != readSize){
            err(1, "Error while writing");
        }
    }
    lseek(fd2, 0, SEEK_SET);
    lseek(fd3, 0, SEEK_SET);
    while((readSize = read(fd3, &c, sizeof(c))) > 0){
        if (write(fd2, &c, readSize) != readSize){
            err(1, "Error while writing");
        }
    }
    close(fd1);
    close(fd2);
    close(fd3);
    exit(0);
}